class Solution {
public:

    bool howmanydaystobloom(vector<int>& arr, int m, int k, int days) {
        int count = 0;
        for (int i = 0; i < arr.size(); i++) {
            if (arr[i] <= days) {
                count++;
                if (count == k) {
                    m--;
                    count = 0;
                    if (m == 0) {
                        return true;
                    }
                }
            } else {
                count = 0;
            }
        }
        return m == 0;
    }

    int minDays(vector<int>& arr, int m, int k) {
        // Step 1: Find min and max element in the array
        int s = *min_element(arr.begin(), arr.end());
        int e = *max_element(arr.begin(), arr.end());

        long long int mul = (long long)m * k;
        if (arr.size() < mul) {
            return -1;
        }

        int ans = 0;
        while (s <= e) {
            int mid = s + (e - s) / 2;
            int days = mid;

            if (howmanydaystobloom(arr, m, k, days)) {
                ans = days;
                e = mid - 1;
            } else {
                s = mid + 1;
            }
        }
        return ans;
    }
};
