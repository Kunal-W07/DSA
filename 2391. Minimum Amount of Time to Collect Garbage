class Solution {
public:
    int garbageCollection(vector<string>& garbage, vector<int>& travel) {
        int pickp = 0;
        int lastp =0;
        int  travelp =0;

        int pickg = 0;
        int lastg =0;
        int  travelg =0;

        int pickm = 0;
        int lastm =0;
        int  travelm =0;

        for(int i=0; i<garbage.size(); i++){
            string currnthouse = garbage[i];
            for(int j=0; j<currnthouse.length(); j++){
              char garbagetype = currnthouse[j];
              if(garbagetype == 'P'){
                pickp++;
                lastp = i;
              }
              if(garbagetype == 'G'){
                pickg++;
                lastg = i;
              }
              if(garbagetype == 'M'){
                pickm++;
                lastm = i;
              }
            }
        }
        for(int i=0; i<lastp; i++){
            travelp =  travelp + travel[i];
        }
        for(int i=0; i<lastg; i++){
            travelg = travelg + travel[i];
        }
        for(int i=0; i<lastm; i++){
            travelm =  travelm + travel[i];
        }
    int totalpick =  pickp + pickg + pickm;
    int traveltime = travelp + travelg + travelm;
    
    return totalpick + traveltime;
    }
};
