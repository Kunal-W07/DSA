class Solution {
public:

    void findfirstacc(vector<int>& nums, int target,int &ans1){
        int n = nums.size();
        int s= 0;
        int e = n-1;

        while(s<=e){
            int mid = s+(e-s)/2;
            if(target == nums[mid]){
                ans1 = mid ;
                // first sathi left jao
                e = mid-1;
            }
            else if(target>nums[mid]){
                s = mid+1;
            }
            else if(target<nums[mid]){
                e = mid -1;
            }
        }
        
    }

    void findlastacc(vector<int>& nums, int target,int &ans2){
        int n = nums.size();
        int s= 0;
        int e = n-1;

        while(s<=e){
            int mid = s+(e-s)/2;
            if(target == nums[mid]){
                ans2 = mid ;
                // last sathi right jao
                s = mid+1;
            }
            else if(target>nums[mid]){
                s = mid+1;
            }
            else if(target<nums[mid]){
                e = mid -1;
            }
        }
        
    }

    vector<int> searchRange(vector<int>& nums, int target) {
        int ans1 = -1;
        findfirstacc(nums,target,ans1);
        int ans2 = -1;
        findlastacc(nums,target,ans2);
        vector<int> temp(2);
        temp[0] = ans1;
        temp[1] = ans2;
        return temp;
       
    }
   
};


    
